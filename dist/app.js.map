{"version":3,"sources":["../src/app.js"],"names":["auth","require","MongoStore","app","set","join","__dirname","use","json","urlencoded","extended","cookieName","static","authUser","req","res","next","err","Error","status","locals","message","error","get","format","send","toString","html","render","default","errorDetails"],"mappings":";;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;IAAYA,I;;AACZ;;;;AACA;;;;;;;;AAfA;AACAC,QAAQ,eAAR;;;AAgBA,IAAMC,aAAa,oDAAnB;AACA,IAAMC,MAAM,wBAAZ;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,OAAR,EAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,IAAII,GAAJ;;AAEA;AACA;AACAJ,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAJ,IAAII,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAL,IAAII,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAP,IAAII,GAAJ,CAAQ,4BAAa,iBAAOI,UAApB,CAAR;AACAR,IAAII,GAAJ,CAAQ,kBAAQK,MAAR,CAAe,eAAKP,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAGAH,IAAII,GAAJ,CAAQP,KAAKa,QAAb;;AAEAV,IAAII,GAAJ,CAAQ,GAAR;AACAJ,IAAII,GAAJ,CAAQ,SAAR;;AAEA;AACAJ,IAAII,GAAJ,CAAQ,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAd,IAAII,GAAJ,CAAQ,UAASU,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAJ,IAAeJ,GAApC;AACAF,MAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIX,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB,EAA8BK,MAA9B,CAAqC;AACnChB,QADmC,kBAC5B;AACLO,UAAIU,IAAJ,CAAS,EAACH,OAAOL,IAAIS,QAAJ,EAAR,EAAT;AACD,KAHkC;AAKnCC,QALmC,kBAK5B;AACLZ,UAAIa,MAAJ,CAAW,OAAX;AACD,KAPkC;AASnCC,WATmC,sBASzB;AACR,UAAMR,eAAaS,YAAnB;AACAf,UAAIU,IAAJ,kCAAwCR,IAAIS,QAAJ,EAAxC;AACD;AAZkC,GAArC;AAcD,CApBD;;kBAsBevB,G","file":"app.js","sourcesContent":["// 在初始化app.js最开头就连接数据库\nrequire('./models/init');\nimport express from 'express';\nimport expressLayouts from 'express-ejs-layouts';\nimport path from 'path';\nimport favicon from 'serve-favicon';\nimport logger from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport connectMongodb from 'connect-mongo';\nimport session from 'express-session';\n\nimport config from './config';\nimport * as auth from './middlewares/auth';\nimport api from './route.api';\nimport page from './route.page';\n\nconst MongoStore = new connectMongodb(session);\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\napp.use(expressLayouts);\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser(config.cookieName));\napp.use(express.static(path.join(__dirname, 'public')));\n\n\napp.use(auth.authUser);\n\napp.use('/', page);\napp.use('/api/v1', api);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message || err;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // the error response\n  res.status(err.status || 500).format({\n    json() {\n      res.send({error: err.toString()});\n    },\n\n    html() {\n      res.render('error');\n    },\n\n    default() {\n      const message = `${errorDetails}`;\n      res.send(`500 Internal server error:\\n${err.toString()}`);\n    },\n  });\n});\n\nexport default app;\n"]}